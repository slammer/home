package work;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.math.BigDecimal;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Properties;
import java.util.Set;
import java.util.Vector;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.Timer;

import util.tools;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;


public class Tomcatenator 
{
			
//	private Vector servers = new Vector();
	protected Timer timer;
	private String loadmasterInstance="";
	private static String logDir = "/home/walterk/ssd/logs/www";
//	Vector<String> processList = new Vector();
	Vector<TomcatServer> serverList = new Vector();
	BufferedWriter bw = null;
	File fout = null;
	FileOutputStream fos = null;
	Properties props = System.getProperties();
	 
	
	
	static {
	    //for localhost testing only
	    javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(
	    new javax.net.ssl.HostnameVerifier(){

	        public boolean verify(String hostname,
	                javax.net.ssl.SSLSession sslSession) {
	            if (hostname.equals("walterk") || hostname.equals("localhost")) {
	                return true;
	            }
	            return false;
	        }
	    });
	}
	
	
	
	private boolean startLog() 
	{
		boolean error=false;
		try{
//			bw = new BufferedWriter(new FileWriter("/home/walterk/ssd/logs/tomcat.log", true));
			
			File fout = new File("/home/walterk/ssd/logs/tomcat.log");
        	fos = new FileOutputStream(fout);
        	bw = new BufferedWriter(new OutputStreamWriter(fos));
			
			
			
		}catch (IOException ioe)
		{
			error=true;
			System.out.println(ioe.toString());
		}
		return error;
	}
	
	
	
	
	
	private void logit(String s)
	{
		try
		{
			
		 System.out.println(s);
		 
//		 //Set the date format.
//		 SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm");
//		 String dateAsString = simpleDateFormat.format(new Date());
//		    
//		 //Write information into file and create a new line.
//		 bw.write("[" + dateAsString + "] - " + s );
//		 bw.newLine();
		 
		 String path = "/home/walterk/ssd/logs/tomcat.log";

	        File file = new File(path);

	        FileWriter fileWriter = new FileWriter(file,true);

	        BufferedWriter bufferFileWriter  = new BufferedWriter(fileWriter);

	        fileWriter.append(s+"\n");
	        

	        bufferFileWriter.close();
		 
		 
		 
		}
		catch (Throwable ioe)
		{
			ioe.printStackTrace();
		}
	}
	
	private class TomcatServer
    {
		String url="";
		String serverName="";
		int sequence=0;
		String notify="";
		
		public TomcatServer(int seq, String sn, String ul, String ntf)
    	{
    		sequence=seq;
    		serverName=sn;
    		url=ul;
    		notify=ntf;
    		logit("Adding server[" + sn + "] sequence[" + seq + "]");
    		
    		
    	}
		
	}
	
	private boolean initialize()
	{
		boolean error=false;
		
//		if(startLog()==true)
//			return true;
		
		
		props.put("mail.smtp.starttls.enable", true); // added this line
	    props.put("mail.smtp.host", "smtp.gmail.com");
	    props.put("mail.smtp.user", "walter.kirkwood@gmail.com");
	    props.put("mail.smtp.password", "spartan61");
	    props.put("mail.smtp.port", "587");
	    props.put("mail.smtp.auth", true);
        
		TomcatServer ts = new TomcatServer(1, "EBYA_api", "https://ebya.loadtracking.com:6290/dp/dpeforms?db=dta2&app=bol&submit_3=1&templateid=1", "walter.kirkwood@mcleodsoftware.com");
    	serverList.add(ts);
    	ts = new TomcatServer(2, "LKXG_api", "https://lkxg.loadtracking.com:6290/dp/dpeforms?db=dta&app=bol&submit_3=1&templateid=1001", "walter.kirkwood@mcleodsoftware.com");
    	serverList.add(ts);
	    ts = new TomcatServer(3, "VLPN_api", "https://vpln.loadtracking.com:7690/dp/", "walter.kirkwood@mcleodsoftware.com");
    	serverList.add(ts);
        
        
		
		return error;
		
	}
	
	
	
			
	Tomcatenator()
	{
		
		if(initialize()==true)
			return;
		
		 final ScheduledExecutorService ses = Executors.newSingleThreadScheduledExecutor();
	        ses.scheduleWithFixedDelay(new Runnable() {
	            @Override
	            public void run() {
	            	checkServers();
	            }
	        }, 0, 10, TimeUnit.MINUTES);
		

		
	}
	
	private void checkServers()
	{
		Date d=new Date();
		logit("Checking Servers:" + d.toString());
		for(int x=0;x<serverList.size();x++)
		{
			TomcatServer svr = (TomcatServer)serverList.elementAt(x);
			logit("Polling " + svr.serverName);
			if(checkTomcat(svr))
				bounceTomcat(svr);
		}
		

		logit("Sleeping...");
	}
	
	private void emailMcleod(TomcatServer tc) 
	{
		String mssg = null;
		String subj = null;
		String toEmail = tc.notify;
		Date d = new Date();


		try {
			mssg = loadmasterInstance + " Internet service reports DOWN \n\n"
					+ d.toString() + "\n";
		}
		catch ( Throwable ex ) {
			return;
		}

		subj = loadmasterInstance + " Internet Module Down";

			try 
			{
//				EmailConfiguration emailConfiguration = RowEmailControl.getEmailConfigurationForService("www_company");
				tools.sendEmail(toEmail, subj, mssg);
			}
			catch( Exception e ) {e.printStackTrace(); }
	}
	

	
//	private String getURL(String schedulerItemName)
//	{
//		String result=null;
//		try {
//			String companyId="TMS";
//			
//			if("InternetModule2".equals(schedulerItemName))
//				companyId="TMS2";
//			else if("InternetModule3".equals(schedulerItemName))
//				companyId="TMS3";
//				
//			QueryBuilder q = new QueryBuilder();
//			q.setMultiCompanyEnabled(false);
//			q.setTableName("www_control");
//			q.addField("web_address");
//			q.addWhere("company_id", companyId);
//			q.open();
//			if(q.inBounds())
//				result=q.getString("web_address");
//		}catch (Throwable ex)
//		{
//			logit("Database connect failed:" + ex.getMessage());
//			ex.printStackTrace();
//		}
//		return result;
//	}
	
	private boolean checkTomcat(TomcatServer tc)
	{
		boolean error=true;
		
		try {
			
			logit("Testing URL:" + tc.url);
			URL url = new URL(tc.url);
	        HttpURLConnection connection = (HttpURLConnection)url.openConnection();
	        connection.setRequestMethod("GET");
	        connection.connect();
	
	        int code = connection.getResponseCode();
	        logit("Response code of the object is "+code);
	        if (code==200)
	        {
	            logit("Internet Module OK");
	            error=false;
	        }else {
	        	logit("Internet Module appears to be down");
	        	error=true;
	        }
		}catch (Throwable ex)
		{
			logit("Error checking Tomcat:" + ex.getMessage());
			ex.printStackTrace();
		}
		
		return error;
	}
	
	private void pause(int seconds)
	{
		int t=seconds*1000;
		
		try {
			Thread.sleep(t);
		}catch (InterruptedException ie)
		{
			ie.printStackTrace();
		}
	}
	
	
	private void bounceTomcat(TomcatServer tc) 
	{
		logit("Bouncing Tomcat:" + tc.serverName);
		emailMcleod(tc);
//		new NotifyScheduler().notifyScheduler("stop " + tc.serverName);
//		pause(20);
//		new NotifyScheduler().notifyScheduler("start " + tc.serverName);

	}
	
	public static void main(String[] args) {
        Tomcatenator st = new Tomcatenator();
        
    }

			

}
